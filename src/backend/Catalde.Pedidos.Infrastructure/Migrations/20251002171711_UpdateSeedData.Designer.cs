// <auto-generated />
using System;
using Catalde.Pedidos.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Catalde.Pedidos.Infrastructure.Migrations
{
    [DbContext(typeof(PedidoDbContext))]
    [Migration("20251002171711_UpdateSeedData")]
    partial class UpdateSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Catalde.Pedidos.Domain.Entities.Ocorrencia", b =>
                {
                    b.Property<int>("IdOcorrencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOcorrencia"));

                    b.Property<DateTime>("HoraOcorrencia")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IndFinalizadora")
                        .HasColumnType("bit");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoOcorrencia")
                        .HasColumnType("int");

                    b.HasKey("IdOcorrencia");

                    b.HasIndex("PedidoId");

                    b.ToTable("Ocorrencias", (string)null);

                    b.HasData(
                        new
                        {
                            IdOcorrencia = 1,
                            HoraOcorrencia = new DateTime(2025, 10, 1, 9, 15, 0, 0, DateTimeKind.Utc),
                            IndFinalizadora = false,
                            PedidoId = 1,
                            TipoOcorrencia = 0
                        },
                        new
                        {
                            IdOcorrencia = 2,
                            HoraOcorrencia = new DateTime(2025, 10, 1, 9, 20, 0, 0, DateTimeKind.Utc),
                            IndFinalizadora = true,
                            PedidoId = 1,
                            TipoOcorrencia = 1
                        },
                        new
                        {
                            IdOcorrencia = 3,
                            HoraOcorrencia = new DateTime(2025, 10, 1, 10, 35, 0, 0, DateTimeKind.Utc),
                            IndFinalizadora = false,
                            PedidoId = 2,
                            TipoOcorrencia = 0
                        },
                        new
                        {
                            IdOcorrencia = 4,
                            HoraOcorrencia = new DateTime(2025, 10, 1, 10, 44, 0, 0, DateTimeKind.Utc),
                            IndFinalizadora = true,
                            PedidoId = 2,
                            TipoOcorrencia = 2
                        });
                });

            modelBuilder.Entity("Catalde.Pedidos.Domain.Entities.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPedido"));

                    b.Property<DateTime>("HorarioPedido")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IndEntregue")
                        .HasColumnType("bit");

                    b.HasKey("IdPedido");

                    b.ToTable("Pedidos", (string)null);

                    b.HasData(
                        new
                        {
                            IdPedido = 1,
                            HorarioPedido = new DateTime(2025, 10, 1, 9, 0, 0, 0, DateTimeKind.Utc),
                            IndEntregue = true
                        },
                        new
                        {
                            IdPedido = 2,
                            HorarioPedido = new DateTime(2025, 10, 1, 10, 30, 0, 0, DateTimeKind.Utc),
                            IndEntregue = false
                        });
                });

            modelBuilder.Entity("Catalde.Pedidos.Domain.Entities.Ocorrencia", b =>
                {
                    b.HasOne("Catalde.Pedidos.Domain.Entities.Pedido", null)
                        .WithMany("Ocorrencias")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Catalde.Pedidos.Domain.Entities.Pedido", b =>
                {
                    b.OwnsOne("Catalde.Pedidos.Domain.ValueObjects.NumeroPedido", "NumeroPedido", b1 =>
                        {
                            b1.Property<int>("PedidoId")
                                .HasColumnType("int");

                            b1.Property<int>("Value")
                                .HasColumnType("int")
                                .HasColumnName("NumeroPedido");

                            b1.HasKey("PedidoId");

                            b1.ToTable("Pedidos");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");

                            b1.HasData(
                                new
                                {
                                    PedidoId = 1,
                                    Value = 1001
                                },
                                new
                                {
                                    PedidoId = 2,
                                    Value = 1002
                                });
                        });

                    b.Navigation("NumeroPedido")
                        .IsRequired();
                });

            modelBuilder.Entity("Catalde.Pedidos.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("Ocorrencias");
                });
#pragma warning restore 612, 618
        }
    }
}
